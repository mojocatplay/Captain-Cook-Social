package baseobject{	import caurina.transitions.*;		import fl.transitions.*;	import fl.transitions.easing.*;		import flash.display.MovieClip;	import flash.text.AntiAliasType;	import flash.text.Font;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		//import mx.effects.Tween;	      	public class TextDisplay extends MovieClip	{		private var string:String;		private var contentFormat:TextFormat;		private var contentText:TextField;		private var gui:GUI;		private var alphaTween:Tween;				public function TextDisplay(prent:Object, text:String, size:int, x:int, y:int, color:Number, fontName:String)		{			//Font.registerFont();			var myFont:Font;						if (fontName == "ArchRival")				myFont = new Times();			else			{//				if (fontName == "Lucida")//					myFont = new LucidaSansDemibold();//				else//					myFont = new Toon(); 			}						setFormat(size, myFont, color);			setTextContent(text);			setLocation(x, y);			this.alpha = 0;			//prent.addEventListener(DisplayTextEvent.FIRE_TEXT, textFadeIn);			gui = new GUI();			gui.addNewChild(contentText, {x:contentText.width, y:contentText.height});			addChild(gui);			textFadeIn();					}				// janus_new 9th April		public function setTextfieldDimensions(textwidth:int, textheight:int, multi:Boolean, align:String = "LEFT"):void		{			contentText.multiline = multi;			contentText.height = textheight;			contentText.width = textwidth;						switch(align)			{				case "LEFT":					contentText.autoSize = TextFieldAutoSize.LEFT;					break;									case "RIGHT":					contentText.autoSize = TextFieldAutoSize.RIGHT;					break;									case "CENTER":					contentText.autoSize = TextFieldAutoSize.CENTER;					break;									default:					contentText.autoSize = TextFieldAutoSize.CENTER;					break;			}		}				private function setFormat(size:int, myFont:Font, color:Number):void		{			contentFormat = new TextFormat();			contentFormat.font = myFont.fontName;			////trace(myFont.fontName);			contentFormat.color = color;			contentFormat.size = size;		}		private function setTextContent(text:String):void		{			contentText = new TextField();			contentText.defaultTextFormat = contentFormat;			contentText.autoSize = TextFieldAutoSize.CENTER;			contentText.embedFonts = true;			contentText.antiAliasType = AntiAliasType.ADVANCED;			contentText.text = text;			contentText.selectable = false;			//contentText.border = true;		}				private function setLocation(x:int, y:int):void		{			this.x = x;			this.y = y;		}				public function setText(text:String):void		{			contentText.text = text;		}				private function textFadeIn():void		{			alphaTween = new Tween(this, "alpha", Regular.easeIn, 0, 1, 0.5, true); 		}	}}